"aws-firewall-rule": {
	type: "component"
	alias: ""
	description: "AWS Cloud Security Rules provided by EvoCloud"
	annotations: {}
	labels: {}
	attributes: workload: type: "autodetects.core.oam.dev"
}

template: {
	// awsSecurityGroup: https://marketplace.upbound.io/providers/crossplane-contrib/provider-aws/v0.52.3/resources/ec2.aws.crossplane.io/SecurityGroup/v1beta1
  output: {
  	apiVersion: "ec2.aws.crossplane.io/v1beta1"
  	kind: "SecurityGroup"
  	metadata: {
      name: parameter.firewallRuleName
      namespace: parameter.defaultNamespace
    }
    spec: {
    	forProvider: {
    		description: parameter.ruleDescription
    		groupName: parameter.securityGroupName
    		ingress: parameter.awsIngressRules
    		if parameter.awsEgressRules != _|_ {
    			egress: parameter.awsEgressRules
        }
    		region: parameter.defaultRegion
    		vpcIdRef: {
    			name: parameter.virtualNetworkName
    		}
    		tags: [
    			{
    				key: "Name"
    				value: parameter.firewallRuleName
    			},
    			{
    				key: "Provider"
    				value: "EvoCloud"
    			}
    		]
    	}
    	providerConfigRef: {
    		name: parameter.providerConfigName
    	}
    	deletionPolicy: "Delete"
    }
  }

  //parameter
  parameter: {
  	//+usage=firewall rule name.
  	firewallRuleName: string
  	//+usage=Security Group name.
  	securityGroupName: string
  	//+usage=Default Namespace under which resources are grouped.
  	defaultNamespace: string
  	//+usage=Security Group rule description.
  	ruleDescription: *"Rules generated by EvoCloud Controller" | string
  	defaultRegion: *"us-east-2" | string
  	//+usage=Object List for AWS Ingress rules.
  	awsIngressRules: [...{
  		fromPort: *443 | int
  		toPort: *443 | int
  		ipProtocol: *"tcp" | string
  		ipRanges: [...{
  			cidrIp: *"0.0.0.0/0" | string
  		}]
  	}]
  	//+usage=Object List for AWS Egress rules.
  	awsEgressRules?: [...{
  		fromPort: *53 | int
  		toPort: *53 | int
  		ipProtocol: *"tcp" | string
  		ipRanges: [...{
  			cidrIp: *"0.0.0.0/0" | string
  		}]
  	}]
  	//+usage=AWS VPC network name.
  	virtualNetworkName: *"evocloud-paas-vnet" | string
  	//+usage=AWS IaaS Provider config name (do not alter this value).
  	providerConfigName: *"provider-aws-config" | string
	}
}
